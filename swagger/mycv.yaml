openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Waginator/MyCV/1.0.0
  - description: MyCV local test server
    url: http://localhost:8080
info:
  description: |
    A ReST backend to manage CV data like:
      - personal data
      - education
      - working experience
      - technology skills
      - languages
      - programming projects
      - certifications

    The backend supports full CRUD functionality.

  version: "1.0.0"
  title: MyCV
  # termsOfService: 'http://swagger.io/terms/'
  contact:
    email: wagner.daniel87@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

tags:
  - name: Working Experience
    description: All about the professional experience of an user
  - name: Education
    description: All about a user's education
  - name: Certification
    description: The achieved certificates of a user
  - name: Technology Skill
    description: All skills of a user grouped by categories
  - name: Language
    description: All languages spoken by the user
  - name: Programming Project
    description: Information about the user's private programming projects

paths:
  /rest/v1/working-experiences/{id}:
    get:
      tags:
        - Working Experience
      summary: Find working experience by ID
      description: Returns a single working experience
      operationId: getWorkingExperienceById
      parameters:
        - name: id
          in: path
          description: ID of the single working experience
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkingExperience'
            application/xml:
              schema:
                $ref: '#/components/schemas/WorkingExperience'
        '400':
          description: ID has an invalid format, for example could not be parsed into a long value
        '404':
          description: working experience resource for ID not found

    delete:
      tags:
        - Working Experience
      summary: Delete working experience by ID
      description: Deletes a single working experience
      parameters:
        - name: id
          in: path
          description: ID of the working experience resource to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: ID has an invalid format, for example could not be parsed into a long value
        '404':
          description: working experience resource for ID not found

    put:
      tags:
        - Working Experience
      summary: Update working experience by ID
      description: Updates a single working experience
      parameters:
        - name: id
          in: path
          description: ID of the working experience resource to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/WorkingExperience'
      responses:
        '200':
          description: resource was successfully updated
        '400':
          description: update request is not valid
        '404':
          description: working experience resource for ID not found

  /rest/v1/working-experiences:
    get:
      tags:
        - Working Experience
      summary: Find all existing working experiences
      description: Returns all existing working experiences
      responses:
        '200':
          description: successful operation

    post:
      tags:
        - Working Experience
      summary: Create working experience
      description: Creates a single working experience
      requestBody:
        $ref: '#/components/requestBodies/WorkingExperience'
      responses:
        '201':
          description: resource was successfully created
        '400':
          description: create request is not valid

externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'

components:
  schemas:
    WorkingExperience:
      type: object
      required:
        - company
        - begin
        - jobTitle
        - placeOfWork
      properties:
        company:
          type: string
          example: John Doe Company
        begin:
          type: string
          format: date
          example: '2015-10-01'
        end:
          type: string
          format: date
          example: '2019-12-31'
        jobTitle:
          type: string
          example: Java Developer
        placeOfWork:
          type: string
          example: Berlin
        focalPoints:
          type: array
          items:
            type: string
          example: [
            Development of the core product,
            Independent implementation and documentation of features and test cases as part of the SCRUM development team,
            Estimating Development Expenses,
          ]

  requestBodies:
    WorkingExperience:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WorkingExperience'
        application/xml:
          schema:
            $ref: '#/components/schemas/WorkingExperience'
      description: Working experience object that needs to be added
      required: true